import React from 'react';
import { useParams, Link } from 'react-router-dom';
import { ArrowLeft } from 'lucide-react';
import { useProducts } from '../context/ProductContext';
import ProductGrid from '../components/Products/ProductGrid';

const CategoryProducts: React.FC = () => {
  const { categorySlug, subcategorySlug } = useParams<{ categorySlug: string; subcategorySlug?: string }>();
  const { categories, getProductsByCategory } = useProducts();
  
  const category = categories.find(cat => cat.slug === categorySlug);
  const subcategory = subcategorySlug ? category?.subcategories.find(sub => sub.slug === subcategorySlug) : undefined;
  
  const products = getProductsByCategory(categorySlug!, subcategorySlug);

  if (!category) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <h2 className="text-2xl font-bold text-gray-900 mb-4">Category Not Found</h2>
          <Link
            to="/categories"
            className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"
          >
            Back to Categories
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="flex items-center space-x-2 mb-8">
          <Link
            to="/categories"
            className="text-primary hover:text-primary-dark flex items-center space-x-2"
          >
            <ArrowLeft className="w-5 h-5" />
            <span>Categories</span>
          </Link>
          <span className="text-gray-500">/</span>
          <span className="text-gray-900 font-medium">{category.name}</span>
          {subcategory && (
            <>
              <span className="text-gray-500">/</span>
              <span className="text-gray-900 font-medium">{subcategory.name}</span>
            </>
          )}
        </div>

        <div className="text-center mb-12">
          <h1 className="text-3xl font-bold text-gray-900 mb-4">
            {subcategory ? subcategory.name : category.name}
          </h1>
          <p className="text-lg text-gray-600">
            {subcategory ? subcategory.description : category.description}
          </p>
        </div>

        {!subcategory && category.subcategories.length > 0 && (
          <div className="mb-12">
            <h2 className="text-xl font-semibold mb-6">Browse Subcategories</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {category.subcategories.map((sub) => (
                <Link
                  key={sub.id}
                  to={`/category/${category.slug}/${sub.slug}`}
                  className="bg-white p-4 rounded-lg shadow-md hover:shadow-lg transition-shadow"
                >
                  <h3 className="font-semibold text-gray-900 mb-2">{sub.name}</h3>
                  <p className="text-gray-600 text-sm mb-2">{sub.description}</p>
                  <p className="text-primary text-sm">
                    {getProductsByCategory(category.slug, sub.slug).length} products
                  </p>
                </Link>
              ))}
            </div>
          </div>
        )}

        <ProductGrid products={products} />
      </div>
    </div>
  );
};

export default CategoryProducts;