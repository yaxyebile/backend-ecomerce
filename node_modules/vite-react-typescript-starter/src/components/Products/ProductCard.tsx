import React from 'react';
import { Link } from 'react-router-dom';
import { ShoppingCart, Star } from 'lucide-react';
import { Product } from '../../types';
import { useCart } from '../../context/CartContext';

interface ProductCardProps {
  product: Product;
}

const ProductCard: React.FC<ProductCardProps> = ({ product }) => {
  const { addToCart } = useCart();

  const handleAddToCart = (e: React.MouseEvent) => {
    e.preventDefault();
    addToCart(product);
  };

  return (
    <div className="relative max-w-sm w-full bg-white rounded-2xl shadow-md border border-gray-200 overflow-hidden hover:shadow-xl transition-all duration-300 group flex flex-col">
      {/* Featured Badge */}
      {product.featured && (
        <span className="absolute top-2 left-2 sm:top-3 sm:left-3 z-10 bg-gradient-to-r from-yellow-400 to-yellow-500 text-white text-xs font-bold px-2 sm:px-3 py-0.5 sm:py-1 rounded-full shadow">
          Featured
        </span>
      )}

      {/* Product Image */}
      <Link to={`/product/${product.id}`} className="block overflow-hidden">
        <img
          src={product.image}
          alt={product.name}
          className="w-full h-40 sm:w-80 sm:h-60 object-cover group-hover:scale-105 transition-transform duration-300 rounded-lg"
        />
      </Link>

      {/* Card Body */}
      <div className="p-3 sm:p-4 flex flex-col flex-1">
        <Link to={`/product/${product.id}`} className="flex-1">
          <h3 className="text-sm sm:text-base font-semibold text-gray-900 hover:text-primary transition-colors line-clamp-2 mb-1">
            {product.name}
          </h3>
        </Link>

        <p className="text-xs sm:text-sm text-gray-500 mb-2 line-clamp-2 min-h-[2.5em]">{product.description}</p>

        {/* Rating */}
        <div className="flex items-center gap-1 mb-2">
          {[...Array(5)].map((_, i) => (
            <Star
              key={i}
              className={`w-3.5 h-3.5 sm:w-4 sm:h-4 ${i < 4 ? 'text-yellow-400 fill-yellow-400' : 'text-gray-300'}`}
            />
          ))}
          <span className="text-xs text-gray-400 ml-1">(4.0)</span>
        </div>

        {/* Price & Stock */}
        <div className="flex items-center justify-between mt-auto">
          <span className="text-lg sm:text-xl font-bold text-primary">${product.price.toFixed(2)}</span>
          <span
            className={`text-xs font-medium px-2 py-0.5 rounded-full ${
              product.stock > 0 ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'
            }`}
          >
            {product.stock > 0 ? `${product.stock} in stock` : 'Out of stock'}
          </span>
        </div>

        {/* Add to Cart Button */}
        <button
          onClick={handleAddToCart}
          disabled={product.stock === 0}
          className="mt-3 sm:mt-4 w-full bg-primary hover:bg-primary-dark text-white py-2 rounded-lg font-medium transition-colors disabled:bg-gray-300 disabled:cursor-not-allowed flex items-center justify-center gap-2 text-sm sm:text-base"
        >
          <ShoppingCart className="w-4 h-4 sm:w-5 sm:h-5" />
          Add to Cart
        </button>
      </div>
    </div>
  );
};

export default ProductCard;
