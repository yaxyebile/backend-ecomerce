import React, { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { ShoppingCart, Menu, X, Search, User, List } from 'lucide-react';
import { useCart } from '../../context/CartContext';
import { useAuth } from '../../context/AuthContext';

const Header: React.FC = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [searchQuery, setSearchQuery] = useState('');
  const { getTotalItems, orders } = useCart();
  const pendingOrdersCount = Array.isArray(orders) ? orders.filter((o: any) => o.status === 'pending').length : 0;
  const { user, logout } = useAuth();
  const navigate = useNavigate();

  const handleSearch = (e: React.FormEvent) => {
    e.preventDefault();
    if (searchQuery.trim()) {
      navigate(`/search?q=${encodeURIComponent(searchQuery)}`);
      setSearchQuery('');
    }
  };

  return (
    <header className="bg-white shadow-md sticky top-0 z-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          {/* Logo */}
          <Link to="/" className="flex items-center space-x-2">
            <div className="w-8 h-8 bg-primary rounded-lg flex items-center justify-center">
              <span className="text-white font-bold text-lg">E</span>
            </div>
            <span className="text-xl font-bold text-gray-900">eCommerce</span>
          </Link>

          {/* Desktop Navigation */}
          <nav className="hidden md:flex space-x-8">
            <Link to="/" className="text-gray-700 hover:text-primary transition-colors">
              Home
            </Link>
            <Link to="/products" className="text-gray-700 hover:text-primary transition-colors">
              Products
            </Link>
            <Link to="/categories" className="text-gray-700 hover:text-primary transition-colors">
              Categories
            </Link>
          </nav>

          {/* Search Bar */}
          <form onSubmit={handleSearch} className="hidden md:flex items-center space-x-2 flex-1 max-w-lg mx-8">
            <div className="relative flex-1">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4" />
              <input
                type="text"
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                placeholder="Search products..."
                className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
            </div>
          </form>

          {/* Right Side Icons */}
          <div className="flex items-center space-x-4">
            <Link to="/cart" className="relative p-2 text-gray-700 hover:text-blue-600 transition-colors">
              <ShoppingCart className="w-6 h-6" />
              {getTotalItems() > 0 && (
                <span className="absolute -top-1 -right-1 bg-blue-600 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">
                  {getTotalItems()}
                </span>
              )}
            </Link>
            <Link to="/orders" className="relative p-2 text-gray-700 hover:text-blue-600 transition-colors" title="Orders">
              <List className="w-6 h-6" />
              {pendingOrdersCount > 0 && (
                <span className="absolute -top-1 -right-1 bg-red-600 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">
                  {pendingOrdersCount}
                </span>
              )}
            </Link>
           
            {/* Auth Buttons */}
            {user ? (
              <>
                <Link to="/profile" className="flex items-center space-x-1 text-gray-700 hover:text-primary font-semibold transition-colors">
                  <User className="w-5 h-5" />
                  <span>{user.name || 'Profile'}</span>
                </Link>
                <button
                  onClick={logout}
                  className="ml-2 px-3 py-1 rounded bg-gray-100 hover:bg-gray-200 text-gray-700 font-semibold text-sm transition-colors"
                >
                  Logout
                </button>
              </>
            ) : (
              <>
                <Link to="/login" className="px-3 py-1 rounded bg-primary text-white hover:bg-primary-dark font-semibold text-sm transition-colors">Login</Link>
                <Link to="/signup" className="px-3 py-1 rounded bg-gray-100 hover:bg-gray-200 text-gray-700 font-semibold text-sm transition-colors">Signup</Link>
              </>
            )}
            {/* Mobile menu button */}
            <button
              onClick={() => setIsMenuOpen(!isMenuOpen)}
              className="md:hidden p-2 text-gray-700 hover:text-primary transition-colors"
            >
              {isMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
            </button>
          </div>
        </div>

        {/* Mobile Navigation */}
        {isMenuOpen && (
          <div className="md:hidden fixed inset-0 bg-black bg-opacity-30 z-50 flex justify-end">
            <div className="w-4/5 max-w-xs bg-white shadow-2xl rounded-l-2xl p-6 h-full flex flex-col space-y-5 animate-slide-in">
              <form onSubmit={handleSearch} className="flex items-center space-x-2 mb-2">
                <div className="relative flex-1">
                  <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4" />
                  <input
                    type="text"
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                    placeholder="Search products..."
                    className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-base"
                  />
                </div>
              </form>
              <Link to="/" className="block text-gray-700 hover:text-primary transition-colors text-base py-2 rounded" onClick={() => setIsMenuOpen(false)}>
                Home
              </Link>
              <Link to="/products" className="block text-gray-700 hover:text-primary transition-colors text-base py-2 rounded" onClick={() => setIsMenuOpen(false)}>
                Products
              </Link>
              <Link to="/categories" className="block text-gray-700 hover:text-primary transition-colors text-base py-2 rounded" onClick={() => setIsMenuOpen(false)}>
                Categories
              </Link>
              {/* Auth Buttons Mobile */}
              {user ? (
                <>
                  <Link to="/profile" className="flex items-center space-x-2 text-gray-700 hover:text-primary font-semibold transition-colors text-base py-2 rounded" onClick={() => setIsMenuOpen(false)}>
                    <User className="w-5 h-5" />
                    <span>{user.name || 'Profile'}</span>
                  </Link>
                  <button
                    onClick={() => { logout(); setIsMenuOpen(false); }}
                    className="w-full px-3 py-2 rounded bg-gray-100 hover:bg-gray-200 text-gray-700 font-semibold text-base transition-colors text-left mt-1"
                  >
                    Logout
                  </button>
                </>
              ) : (
                <>
                  <Link to="/login" className="block w-full px-3 py-2 rounded bg-primary text-white hover:bg-primary-dark font-semibold text-base transition-colors text-center" onClick={() => setIsMenuOpen(false)}>
                    Login
                  </Link>
                  <Link to="/signup" className="block w-full px-3 py-2 rounded bg-gray-100 hover:bg-gray-200 text-gray-700 font-semibold text-base transition-colors text-center" onClick={() => setIsMenuOpen(false)}>
                    Signup
                  </Link>
                </>
              )}
              <Link to="/cart" className="flex items-center space-x-2 text-gray-700 hover:text-primary transition-colors text-base py-2 rounded" onClick={() => setIsMenuOpen(false)}>
                <ShoppingCart className="w-5 h-5" />
                <span>Cart</span>
              </Link>
              <Link to="/orders" className="relative flex items-center space-x-2 text-gray-700 hover:text-primary transition-colors text-base py-2 rounded" onClick={() => setIsMenuOpen(false)}>
                <List className="w-5 h-5" />
                <span>Orders</span>
                {pendingOrdersCount > 0 && (
                  <span className="ml-1 bg-red-600 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">
                    {pendingOrdersCount}
                  </span>
                )}
              </Link>
              <button
                onClick={() => setIsMenuOpen(false)}
                className="absolute top-4 right-4 p-2 rounded-full bg-gray-100 hover:bg-gray-200 text-gray-700"
                aria-label="Close menu"
              >
                <X className="w-6 h-6" />
              </button>
            </div>
          </div>
        )}
      </div>
    </header>
  );
};

export default Header;